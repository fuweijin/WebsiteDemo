<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
		
	
		<!-- 自动扫描 --> 
		<context:component-scan base-package="com.fwj"></context:component-scan>
	
		<context:property-placeholder location="classpath:jdbc.properties"/>
		<!-- 引入配置文件 -->
		<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location" value="classpath:jdbc.properties"></property>
		</bean> -->
	
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="${mysql_driver}"></property>
			<property name="url" value="${mysql_url}"></property>
			<property name="username" value="${mysql_username}"></property>
			<property name="password" value="${mysql_password}"></property>
			<!-- 初始化连接大小 --> 
			<property name="initialSize" value="${initialSize}"></property>
			<!-- 连接池最大数量 -->
			<property name="maxActive" value="${maxActive}"></property>
			<!-- 连接池最大空闲 --> 
			<property name="maxIdle" value="${maxIdle}"></property>
			<!-- 连接池最小空闲 -->
			<property name="minIdle" value="${minIdle}"></property>
			<!-- 获取连接最大等待时间 -->
			<property name="maxWait" value="${maxWait}"></property>			
		</bean>	
		
		<!--(1) 另一种方法：spring和MyBatis完美整合，不需要mybatis的配置映射文件 --> 
		
		 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"></property>
			
			<!-- 自动扫描mapping.xml文件 --> 
			
			 <property name="mapperLocations" value="classpath:com/fwj/mapper/*.xml"></property>
		</bean> 
		
		<!--
			3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory

		basePackage:指定sql映射文件/接口所在的包（自动扫描）
		-->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.fwj.mapper"></property>
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		</bean>
		
		<!--
			4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源
		-->
		<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"></property>
		</bean>
		
		<!-- 将ShiroFilter配置到spring容器 -->
		<!-- <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
			<property name="securityManager" ref="securityManager"/>
			
		</bean> -->
</beans>